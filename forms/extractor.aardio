import win.ui;
import process;
import fonts.fontAwesome;
/*DSG{{*/
var winform = win.form(text="WinAsar - extractor";right=1075;bottom=734;acceptfiles=1;bgcolor=16777215;parent=...)
winform.add(
btnExtract={cls="plus";text="解包...";left=822;top=676;right=1022;bottom=702;align="left";db=1;dr=1;font=LOGFONT(h=-15);iconStyle={align="left";font=LOGFONT(name='FontAwesome');padding={left=15}};iconText='\uF093';notify=1;textPadding={left=35};z=3};
btnOpen={cls="plus";text="打开文件...";left=640;top=7;right=840;bottom=33;align="left";dr=1;dt=1;font=LOGFONT(h=-15);iconStyle={align="left";font=LOGFONT(name='FontAwesome');padding={left=15}};iconText='\uF115';notify=1;textPadding={left=35};z=6};
btnReplace={cls="plus";text="保存更改";left=856;top=7;right=1056;bottom=33;align="left";disabled=1;dr=1;dt=1;font=LOGFONT(h=-15);iconStyle={align="left";font=LOGFONT(name='FontAwesome');padding={left=15}};iconText='\uF114';textPadding={left=35};z=9};
editAsarPath={cls="edit";left=19;top=8;right=629;bottom=32;dl=1;dr=1;dt=1;edge=1;multiline=1;z=5};
editInfo={cls="richedit";left=286;top=43;right=1056;bottom=658;aw=1;db=1;dr=1;dt=1;edge=1;hidesel=false;hscroll=1;multiline=1;vscroll=1;wrap=1;z=2};
editOutDir={cls="edit";left=101;top=676;right=800;bottom=702;acceptfiles=1;db=1;dl=1;dr=1;edge=1;multiline=1;z=7};
progress={cls="plus";left=21;top=710;right=1058;bottom=723;bgcolor=6447459;db=1;dl=1;dr=1;forecolor=9959653;hide=1;z=4};
splitter1={cls="splitter";left=278;top=43;right=283;bottom=658;db=1;dt=1;frame=1;z=10};
static={cls="static";text="目录路经：";left=18;top=678;right=97;bottom=702;db=1;dl=1;font=LOGFONT(h=-15);transparent=1;z=8};
treeview={cls="treeview";left=18;top=43;right=278;bottom=658;asel=false;aw=1;bgcolor=16777215;db=1;dl=1;dt=1;edge=1;tabstop=1;vscroll=1;z=1}
)
/*}}*/

// 为richedit添加查找替换功能
import win.dlg.findReplace;
var frDlg = win.dlg.findReplace(winform);

frDlg.onSearch = function(findWhat,down,matchCase,wholeWord){
	winform.editInfo.findText(findWhat,frDlg.flags);
}
frDlg.onReplace = function(findWhat,replaceWith,down,matchCase,wholeWord){
	winform.editInfo.replaceText(findWhat,replaceWith,frDlg.flags);		
}
frDlg.onReplaceAll = function(findWhat,replaceWith,down,matchCase,wholeWord){
	winform.editInfo.replaceAll(findWhat,replaceWith,frDlg.flags);
}

// 添加查找替换快捷键响应
import win.ui.accelerator;
var accelerator = win.ui.accelerator({
    { 
        ctrl = true; vkey = 'F'#; 
        oncommand = function() frDlg.find(winform.editInfo.selText); 
    };  
    { 
        ctrl = true; vkey = 'H'#; 
        oncommand = function() frDlg.replace(winform.editInfo.selText);
    };  
},winform);


import fsys.asar.reader;
var showAsarInfo = function(){
	var unasar,err = fsys.asar.reader(winform.editAsarPath.text);
	if(!unasar){
		winform.msgboxErr(..string.concat("Format error: not an asar file or corrupted",err));
		return;
	}
	
	winform.treeview.clear();
	winform.treeview.insertItem(unasar.treeData());
	
	winform.editInfo.text = web.json.stringify(unasar.info,true);
	
	if(winform.unasar) winform.unasar.close();
	winform.unasar = unasar;
	winform.asaPath = winform.editAsarPath.text;
	
	if( ( !# ( ..string.trim( winform.editOutDir.text )) )
		|| (winform.editOutDir.autoPath = winform.editOutDir.text ) ){
		winform.editOutDir.text = winform.asaPath  + ".unpack";
		winform.editOutDir.autoPath = winform.editOutDir.text ;
	}
}

winform.editAsarPath.oncommand = function(id,event){ 
	if( event == 0x300/*_EN_CHANGE*/){
		if( ..string.endWith(winform.editAsarPath.text,"*.asar")){
				if( ..io.exist(winform.editAsarPath.text)){
					showAsarInfo();
				};
		}	
	}
	
} 

import fsys.dlg;
winform.btnOpen.oncommand = function(id,event){
	var path = fsys.dlg.open("*.asar|*.asar||","Browse",,winform.hwnd);
	if(#path){
		winform.editAsarPath.text = path;
		showAsarInfo();
	} 
}

winform.wndproc = {
    [0x233/*_WM_DROPFILES*/] = function(hwnd,message,wParam,lParam){ 
		var files = win.getDropFile(wParam)
		if(#files){
			 winform.editAsarPath.text = files[1];
			 showAsarInfo();
		};
	}
}

winform.editOutDir.wndproc = {
    [0x233/*_WM_DROPFILES*/] = function(hwnd,message,wParam,lParam){ 
		var files = win.getDropFile(wParam)
		if(#files){
			if( fsys.isDir(files[1]) )
				winform.editOutDir.text = files[1]; 
		};
	}
}

import fsys;
import win.ui.menu;
import fsys.mime;
// 取消editInfo富文本控件64k限制
::User32.SendMessage(winform.editInfo.hwnd,0xC5/*_EM_LIMITTEXT*/,0x7FFFFFFE, 0);

winform.treeview.onnotify = function(id,code,ptr){
    if( code == 0xFFFFFE3D/*_TVN_SELCHANGEDW*/ ){  
		var hItem = winform.treeview.getSelection();
		if(hItem){
			var data  = winform.treeview.getItemData(hItem);
            if( data[["size"]] && (  ..string.len(winform.unasar.readFile(data.path) ) ) 
                ){
            	 winform.editInfo.text = winform.unasar.readFile(data.path);
            	 winform.btnReplace.disabled = false;
            }
            else {
                winform.btnReplace.disabled = true;
            	 winform.editInfo.text = web.json.stringify(data,true) 
            }
            
		}
    }
    elseif(code = 0xFFFFFFFB/*_NM_RCLICK*/){ //鼠标右键单击
        var hItem,tvht = winform.treeview.hitTest();
        winform.treeview.setSelected(hItem);
        var data  = winform.treeview.getItemData(hItem);
        if(!data[["size"]]) return;
        
        var menu = win.ui.popmenu(winform)
        menu.add("Copy To...",
            function(){ 
                var dir = fsys.getParentDir(winform.asaPath)  
                var path = fsys.dlg.save("*.*|*.*||","Copy",dir ,winform.hwnd,,data.text) 
                
                if(path){
                   
                    var file = io.open(path,"w+b")
                    if(!file) {
                    	winform.msgboxErr("Create File Failed!")
                    	return;    
                    }
                    
                    winform.progress.hide = false;
                    winform.progress.setProgressRange(1,data.size);
                    
                    var buf = raw.buffer(0x100000)
                	for readSize in winform.unasar.eachReadBuffer(buf,data.path) {
                		file.writeBuffer(buf,readSize);
                		winform.progress.progressPos = winform.progress.pos + readSize;
                	}   
                	file.close(); 
                	process.explore(path)
                }
            }
        )
        menu.popup(x,y,true);
    } 
}

winform.btnReplace.oncommand = function(id,event){
    hItem = winform.treeview.getSelection();
	var data  = winform.treeview.getItemData(hItem);
    if(!(data[["size"]] && data[["path"]]) ) {
        winform.msgboxErr("Invalid item data");
        return;
    }
	var ret,err  = winform.unasar.replaceText(data[["path"]],winform.editInfo.text)
	if(err) return  winform.msgboxErr(err);
	
	winform.btnReplace.disabled = true;
	win.delay(1000);
	winform.btnReplace.disabled = false;
}

import fsys.dlg;
winform.btnExtract.oncommand = function(id,event){
    if(!#winform.asaPath){
		var path = fsys.dlg.open("*.asar|*.asar||","Browse",,winform.hwnd);
		if(#path){
			winform.editAsarPath.text = path;
			showAsarInfo();
		} 
		else {
			return;
		}
    }
    
	var dir = winform.editOutDir.text;
	var parentDir = fsys.getParentDir(winform.asaPath)  
	..io.createDir(dir)
	if( ! #dir )
		dir = fsys.dlg.opendir(parentDir,winform.hwnd,"Browse");
		
	if(!dir) return;
	
	winform.progress.hide = false;
    winform.progress.setProgressRange(1,1000);
    
    winform.btnExtract.disabledText = {'\uF254';'\uF251';'\uF252';'\uF253';'\uF250'}
    var msg = MSG() 
	for path,size,progress in winform.unasar.eachUnpack(dir) {
		winform.progress.progressPos = progress * 1000;
		win.peekPumpMessage( msg )
	}
	winform.btnExtract.disabledText = null;
	
	winform.progress.hide = true;
	process.explore_select(dir)
}

winform.btnExtract.skin({
	background={
		default=0xFF8FB2B0;
		hover=0xFF928BB3;
		disabled=0xFFCCCCCC;
	}
})

winform.btnOpen.skin({
	background={
		default=0xFF8FB2B0;
		hover=0xFF928BB3;
		disabled=0xFFCCCCCC; 
	}
})

winform.btnReplace.skin({
	background={
		default=0xFF8FB2B0;
		hover=0xFF928BB3;
		disabled=0xFFCCCCCC;
	}
})

winform.splitter1.split(winform.treeview,winform.editInfo);

// tabs控件小BUG：默认首次切换选项卡显示子窗体时，个别控件不显示，这里手动重绘一次
winform.wndproc = function(hwnd,message,wParam,lParam){ 
	if(message==0x18/*_WM_SHOWWINDOW*/){
		if(wParam){
			winform.setTimeout(
				function(){
					winform.redraw();
				}
			);
		}
	}
}

winform.enableDpiScaling();
winform.show();

win.loopMessage();
return winform;